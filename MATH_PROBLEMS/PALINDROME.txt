QUESTION:PALINDROME
TOPIC:BASIC MATHS
PLATFORM:LEETCODE
-------------------------------------------------------------------------------------------
QUESTION:
Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
-----------------------------------------------------------------------------------------------
MY APPROACH:
  *REVERSED THE GIVEN NUMBER
  *AND COMPARED IT WITH THE ORIGINAL NUMBER

------------------------
CODE:
class Solution:
    def isPalindrome(self, x: int) -> bool:
        num=x
        r=0
        if x<0:
            return False
        else:
            while x!=0:
                rem=x%10
                r=r*10+rem
                x=x//10
        if num==r:
            return True
        else:
            return False  

------------------------------------------------------------------------------------------------
OPTIMAL SOLUTION:
THE OPTIMAL SOLUTION IS TO CONVERT THE NUMBER INTO STRING AND THEN IF THE REVERSE IS EQUAL TO THE ORGINAL ONE
------------------------------
CODE:
class Solution:
    def isPalindrome(self, x: int) -> bool:

        return  str(x) == str(x)[::-1]